// This file is auto-generated by @hey-api/openapi-ts

export type AdminUserCreate = {
    email: string;
    password: string;
    full_name: string;
    is_verified?: boolean;
};

export type Body_login_access_token_api_v1_login_access_token_post = {
    grant_type?: (string | null);
    username: string;
    password: string;
    scope?: string;
    client_id?: (string | null);
    client_secret?: (string | null);
};

export type Difficulty = 'beginner' | 'intermediate' | 'advanced';

export type ExerciseCategory = 'strength' | 'cardio' | 'flexibility' | 'balance' | 'other';

export type ExerciseCreate = {
    title: string;
    description?: (string | null);
    category?: (ExerciseCategory | null);
    muscle_group?: (MuscleGroup | null);
    reps?: (number | null);
    sets?: (number | null);
    duration?: (number | null);
    difficulty?: (Difficulty | null);
    image_url?: (string | null);
    video_url?: (string | null);
};

export type ExercisePublic = {
    title: string;
    description?: (string | null);
    category?: (ExerciseCategory | null);
    muscle_group?: (MuscleGroup | null);
    reps?: (number | null);
    sets?: (number | null);
    duration?: (number | null);
    difficulty?: (Difficulty | null);
    image_url?: (string | null);
    video_url?: (string | null);
    id: string;
    owner_id: string;
};

export type ExercisesPublic = {
    data: Array<ExercisePublic>;
    count: number;
};

export type ExerciseUpdate = {
    title?: (string | null);
    description?: (string | null);
    category?: (ExerciseCategory | null);
    muscle_group?: (MuscleGroup | null);
    reps?: (number | null);
    sets?: (number | null);
    duration?: (number | null);
    difficulty?: (Difficulty | null);
    image_url?: (string | null);
    video_url?: (string | null);
};

export type HTTPValidationError = {
    detail?: Array<ValidationError>;
};

export type ItemCreate = {
    title: string;
    description?: (string | null);
};

export type ItemPublic = {
    title: string;
    description?: (string | null);
    id: string;
    owner_id: string;
};

export type ItemsPublic = {
    data: Array<ItemPublic>;
    count: number;
};

export type ItemUpdate = {
    title?: (string | null);
    description?: (string | null);
};

export type Message = {
    message: string;
};

export type MuscleGroup = 'chest' | 'back' | 'legs' | 'arms' | 'shoulders' | 'core' | 'full_body' | 'other';

export type NewPassword = {
    token: string;
    new_password: string;
};

export type Sex = 'male' | 'female' | 'other';

export type Token = {
    access_token: string;
    token_type?: string;
};

export type UpdatePassword = {
    current_password: string;
    new_password: string;
};

export type UserCreate = {
    email: string;
    full_name?: (string | null);
    mobile_number?: (string | null);
    date_of_birth?: (string | null);
    weight?: (number | null);
    height?: (number | null);
    notes?: (string | null);
    sex?: (Sex | null);
    role?: UserRole;
    password: string;
};

export type UserPublic = {
    email: string;
    full_name?: (string | null);
    mobile_number?: (string | null);
    date_of_birth?: (string | null);
    weight?: (number | null);
    height?: (number | null);
    notes?: (string | null);
    sex?: (Sex | null);
    role?: UserRole;
    id: string;
};

export type UserRegister = {
    email: string;
    password: string;
    full_name?: (string | null);
    role?: UserRole;
};

export type UserRole = 'user' | 'admin' | 'trainer';

export type UsersPublic = {
    data: Array<UserPublic>;
    count: number;
};

export type UserUpdate = {
    email?: (string | null);
    full_name?: (string | null);
    mobile_number?: (string | null);
    date_of_birth?: (string | null);
    weight?: (number | null);
    height?: (number | null);
    notes?: (string | null);
    sex?: (Sex | null);
    role?: (UserRole | null);
    password?: (string | null);
};

export type UserUpdateMe = {
    full_name?: (string | null);
    email?: (string | null);
    mobile_number?: (string | null);
    date_of_birth?: (string | null);
    weight?: (number | null);
    height?: (number | null);
    notes?: (string | null);
    sex?: (Sex | null);
};

export type ValidationError = {
    loc: Array<(string | number)>;
    msg: string;
    type: string;
};

export type CreateUserApiV1AdminUsersPostData = {
    requestBody: AdminUserCreate;
};

export type CreateUserApiV1AdminUsersPostResponse = (UserPublic);

export type LoginApiV1GetResponse = (unknown);

export type LoginAccessTokenApiV1LoginAccessTokenPostData = {
    formData: Body_login_access_token_api_v1_login_access_token_post;
};

export type LoginAccessTokenApiV1LoginAccessTokenPostResponse = (Token);

export type TestTokenApiV1LoginTestTokenPostResponse = (UserPublic);

export type RecoverPasswordApiV1PasswordRecoveryEmailPostData = {
    email: string;
};

export type RecoverPasswordApiV1PasswordRecoveryEmailPostResponse = (Message);

export type ResetPasswordApiV1ResetPasswordPostData = {
    requestBody: NewPassword;
};

export type ResetPasswordApiV1ResetPasswordPostResponse = (Message);

export type RecoverPasswordHtmlContentApiV1PasswordRecoveryHtmlContentEmailPostData = {
    email: string;
};

export type RecoverPasswordHtmlContentApiV1PasswordRecoveryHtmlContentEmailPostResponse = (string);

export type ReadExercisesApiV1ExercisesGetData = {
    limit?: number;
    skip?: number;
};

export type ReadExercisesApiV1ExercisesGetResponse = (ExercisesPublic);

export type CreateExerciseApiV1ExercisesPostData = {
    requestBody: ExerciseCreate;
};

export type CreateExerciseApiV1ExercisesPostResponse = (ExercisePublic);

export type ReadExerciseApiV1ExercisesIdGetData = {
    id: string;
};

export type ReadExerciseApiV1ExercisesIdGetResponse = (ExercisePublic);

export type UpdateExerciseApiV1ExercisesIdPutData = {
    id: string;
    requestBody: ExerciseUpdate;
};

export type UpdateExerciseApiV1ExercisesIdPutResponse = (ExercisePublic);

export type DeleteExerciseApiV1ExercisesIdDeleteData = {
    id: string;
};

export type DeleteExerciseApiV1ExercisesIdDeleteResponse = (Message);

export type ReadItemsApiV1ItemsGetData = {
    limit?: number;
    skip?: number;
};

export type ReadItemsApiV1ItemsGetResponse = (ItemsPublic);

export type CreateItemApiV1ItemsPostData = {
    requestBody: ItemCreate;
};

export type CreateItemApiV1ItemsPostResponse = (ItemPublic);

export type ReadItemApiV1ItemsIdGetData = {
    id: string;
};

export type ReadItemApiV1ItemsIdGetResponse = (ItemPublic);

export type UpdateItemApiV1ItemsIdPutData = {
    id: string;
    requestBody: ItemUpdate;
};

export type UpdateItemApiV1ItemsIdPutResponse = (ItemPublic);

export type DeleteItemApiV1ItemsIdDeleteData = {
    id: string;
};

export type DeleteItemApiV1ItemsIdDeleteResponse = (Message);

export type ReadUsersApiV1UsersGetData = {
    limit?: number;
    skip?: number;
};

export type ReadUsersApiV1UsersGetResponse = (UsersPublic);

export type CreateUserApiV1UsersPostData = {
    requestBody: UserCreate;
};

export type CreateUserApiV1UsersPostResponse = (UserPublic);

export type ReadUserMeApiV1UsersMeGetResponse = (UserPublic);

export type DeleteUserMeApiV1UsersMeDeleteResponse = (Message);

export type UpdateUserMeApiV1UsersMePatchData = {
    requestBody: UserUpdateMe;
};

export type UpdateUserMeApiV1UsersMePatchResponse = (UserPublic);

export type UpdatePasswordMeApiV1UsersMePasswordPatchData = {
    requestBody: UpdatePassword;
};

export type UpdatePasswordMeApiV1UsersMePasswordPatchResponse = (Message);

export type RegisterUserApiV1UsersSignupPostData = {
    requestBody: UserRegister;
};

export type RegisterUserApiV1UsersSignupPostResponse = (UserPublic);

export type ReadUserByIdApiV1UsersUserIdGetData = {
    userId: string;
};

export type ReadUserByIdApiV1UsersUserIdGetResponse = (UserPublic);

export type UpdateUserApiV1UsersUserIdPatchData = {
    requestBody: UserUpdate;
    userId: string;
};

export type UpdateUserApiV1UsersUserIdPatchResponse = (UserPublic);

export type DeleteUserApiV1UsersUserIdDeleteData = {
    userId: string;
};

export type DeleteUserApiV1UsersUserIdDeleteResponse = (Message);